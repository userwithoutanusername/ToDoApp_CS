<Window x:Class="To_Do_List.Views.AddTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:To_Do_List" xmlns:local1="clr-namespace:To_Do_List.Converters"
        Title="Add/Edit Task" Height="450" Width="400"
        Background="Black"
        Foreground="White"
		ResizeMode="NoResize">

	<Window.Resources>

        <local1:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>

        <!-- Прозрачные кнопки с белым текстом -->
		<Style TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderBrush" Value="White"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FontSize" Value="14"/>
			<Setter Property="Padding" Value="10,5"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="5">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<!-- Hover эффект для кнопки -->
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="#33FFFFFF"/>
				</Trigger>
			</Style.Triggers>
		</Style>
        
        

		<!-- Стиль для TextBox -->
		<Style TargetType="TextBox">
			<Setter Property="Background" Value="#222222"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderBrush" Value="White"/>
		</Style>

		<!-- Стиль для ComboBox -->
		<Style TargetType="ComboBox">
			<Setter Property="Background" Value="#222222"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderBrush" Value="White"/>
		</Style>

        <Style TargetType="DatePicker">
            <Setter Property="Background" Value="#222222"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style>
        
    </Window.Resources>

	<Grid>
		<StackPanel Margin="20">
			<TextBlock Text="Task Title:" Margin="0,0,0,10" Foreground="White"/>
            <TextBox x:Name="TaskTitleTextBox" Width="300" Height="30" IsReadOnly="{Binding IsReadOnly}" />

            <TextBlock Text="Description:" Margin="0,10,0,10" Foreground="White"/>
            <TextBox x:Name="TaskDescriptionTextBox" Width="300" Height="100" TextWrapping="WrapWithOverflow" IsReadOnly="{Binding IsReadOnly}"/>

            <TextBlock Text="Priority:" Margin="0,10,0,10" Foreground="White"/>
			<ComboBox x:Name="PriorityComboBox" Width="150" Foreground="Black" BorderBrush="White" Background="Black">
				<ComboBoxItem Content="Low" />
				<ComboBoxItem Content="Medium" />
				<ComboBoxItem Content="High" />
			</ComboBox>
            
            <!-- Поле для выбора дэдлайна -->
            <TextBlock Text="Deadline:" Margin="0,10,0,10" Foreground="White"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <DatePicker x:Name="DeadlineDatePicker" Width="150" 
				Background="#222222" 
				Foreground="#222222" 
				SelectedDateFormat="Short" 
				TextElement.Foreground="#222222"/>
                
                <TextBox x:Name="DeadlineTimeTextBox" Width="80" Margin="10,0,0,0"       
                 ToolTip="Enter time in HH:mm format"/>
                
                <!-- Текст-подсказка, который виден, когда текстовое поле пустое -->
                <TextBlock Text="HH:mm" Foreground="Gray" 
                   VerticalAlignment="Center" HorizontalAlignment="Left" 
                   Margin="15,0,0,0" IsHitTestVisible="False"
                   Visibility="{Binding Text, ElementName=DeadlineTimeTextBox, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
            </StackPanel>

			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
				<Button Content="Cancel" Width="75" Click="Cancel_Click"/>
                <Button x:Name="AddButton" Content="Add/Edit" Width="75" Visibility="{Binding AddButtonVisibility}" Click="Add_Click"/>
			</StackPanel>
		</StackPanel>
	</Grid>
</Window>
